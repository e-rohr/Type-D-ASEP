q = 10 	 n = 5
1 added [1, 2, 3, 5, 4], det M = 1.0

2 added [1, 2, 5, 3, 4], det M = 0.99

3 added [1, 2, 5, 4, 3], det M = 0.9801

4 added [1, 2, 4, 3, 5], det M = 0.96059601

5 added [1, 3, 2, 5, 4], det M = 0.9509900498999999

6 added [1, 5, 3, 2, 4], det M = 0.9320653479069899

7 added [1, 5, 4, 3, 2], det M = 0.9135172474836408

8 added [1, 4, 3, 2, 5], det M = 0.8863848717161292

9 added [2, 1, 3, 5, 4], det M = 0.877521022998968

10 added [2, 1, 5, 3, 4], det M = 0.8600583546412884

11 added [2, 1, 5, 4, 3], det M = 0.8429431933839268

12 added [2, 1, 4, 3, 5], det M = 0.8179069375972308

13 added [3, 2, 1, 5, 4], det M = 0.8016305895390459

14 added [5, 3, 2, 1, 4], det M = 0.7778213593991467

15 added [5, 4, 3, 2, 1], det M = 0.7547192872036326

16 added [4, 3, 2, 1, 5], det M = 0.7249803359578535

final basis: [[1, 2, 3, 5, 4], [1, 2, 5, 3, 4], [1, 2, 5, 4, 3], [1, 2, 4, 3, 5], [1, 3, 2, 5, 4], [1, 5, 3, 2, 4], [1, 5, 4, 3, 2], [1, 4, 3, 2, 5], [2, 1, 3, 5, 4], [2, 1, 5, 3, 4], [2, 1, 5, 4, 3], [2, 1, 4, 3, 5], [3, 2, 1, 5, 4], [5, 3, 2, 1, 4], [5, 4, 3, 2, 1], [4, 3, 2, 1, 5]]
number of accepted terms: 16
1 det M = 1.0

2 det M = 0.99

3 det M = 0.9801

4 det M = 0.96059601

5 det M = 0.9509900498999999

6 det M = 0.9320653479069899

7 det M = 0.9135172474836408

8 det M = 0.8863848717161292

9 det M = 0.877521022998968

10 det M = 0.8600583546412884

11 det M = 0.8429431933839268

12 det M = 0.8179069375972308

13 det M = 0.8016305895390459

14 det M = 0.7778213593991467

15 det M = 0.7547192872036326

16 det M = 0.7249803359578535

1.04102035568522*F1*F2*F3*F5*F4
-0.104102035568522*F1*F2*F5*F3*F4
0.0104102035568522*F1*F2*F5*F4*F3
-0.104102035568522*F1*F2*F4*F3*F5
-0.104102035568522*F1*F3*F2*F5*F4
0.0104102035568522*F1*F5*F3*F2*F4
-0.00104102035568522*F1*F5*F4*F3*F2
0.0104102035568522*F1*F4*F3*F2*F5
-0.104102035568522*F2*F1*F3*F5*F4
0.0104102035568522*F2*F1*F5*F3*F4
-0.00104102035568522*F2*F1*F5*F4*F3
0.0104102035568522*F2*F1*F4*F3*F5
0.0104102035568522*F3*F2*F1*F5*F4
-0.00104102035568522*F5*F3*F2*F1*F4
0.000104102035568522*F5*F4*F3*F2*F1
-0.00104102035568522*F4*F3*F2*F1*F5
10000.0*F1*F2*F3*F5*F4 - 1000.0*F1*F2*F4*F3*F5 - 1000.0*F1*F2*F5*F3*F4 + 100.0*F1*F2*F5*F4*F3 - 1000.0*F1*F3*F2*F5*F4 + 100.0*F1*F4*F3*F2*F5 + 100.0*F1*F5*F3*F2*F4 - 10.0*F1*F5*F4*F3*F2 - 1000.0*F2*F1*F3*F5*F4 + 100.0*F2*F1*F4*F3*F5 + 100.0*F2*F1*F5*F3*F4 - 10.0*F2*F1*F5*F4*F3 + 100.0*F3*F2*F1*F5*F4 - 10.0*F4*F3*F2*F1*F5 - 10.0*F5*F3*F2*F1*F4 + 1.0*F5*F4*F3*F2*F1


r**(-4) * (q**4*F1*F2*F3*F5*F4 - q**3*F1*F2*F4*F3*F5 - q**3*F1*F2*F5*F3*F4 + q**2*F1*F2*F5*F4*F3 - q**3*F1*F3*F2*F5*F4 
+ q**2*F1*F4*F3*F2*F5 + q**2*F1*F5*F3*F2*F4 - q*F1*F5*F4*F3*F2 - q**3*F2*F1*F3*F5*F4 + q**2*F2*F1*F4*F3*F5 + q**2*F2*F1*F5*F3*F4 
- q*F2*F1*F5*F4*F3 + q**2*F3*F2*F1*F5*F4 - q*F4*F3*F2*F1*F5 - q*F5*F3*F2*F1*F4 + 1*F5*F4*F3*F2*F1)
